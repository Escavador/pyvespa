language: python
env:
  global:
    - WORK_DIR=/home/travis/build/vespa-engine/pyvespa
    - RESOURCES_DIR=/home/travis/build/vespa-engine/pyvespa/vespa/resources
    - PYVESPA_VERSION=0.2
services:
  - docker
before_install:
  - docker pull vespaengine/vespa
jobs:
  include:
    - stage: run doc tests
      script:
        - pip install -e .[full]
        - travis_wait 600 pytest --doctest-modules --ignore-glob=vespa/test_*.py
    - stage: run unit tests
      script:
        - pip install -e .[full]
        - travis_wait 600 pytest --ignore-glob=vespa/test_integration*.py
    - stage: run notebooks
      script:
        - pip install notebook nbconvert
        - pip install -e .[full]
        - pip install -r docs/sphinx/source/notebook_requirements.txt
        - travis_wait 600 find docs -name '*.ipynb' -exec jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=600 --execute {} +
        - find docs -name '*.nbconvert.ipynb' -exec rm {} +
    - stage: run integration running instance
      script:
        - pip install -e .[full]
        - travis_wait 600 pytest vespa/test_integration_running_instance.py
    - stage: run integration docker
      script:
        - pip install -e .[full]
        - travis_wait 600 pytest vespa/test_integration_docker.py
    - stage: run integration cloud
      script:
        - pip install -e .[full]
        - travis_wait 600 pytest vespa/test_integration_vespa_cloud.py
    - stage: deploy test server
      if: branch = master AND type = push
      script: skip
      deploy:
        provider: pypi
        server: https://test.pypi.org/legacy/
        username: "__token__"
        password: $TEST_PYPI_TOKEN
    - stage: retrieve, install and test
      if: branch = master AND type = push
      script:
        - pip install --quiet --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple -Iv pyvespa[full]==$PYVESPA_VERSION.$TRAVIS_BUILD_NUMBER
        - travis_wait 600 pytest --ignore-glob=vespa/test_integration*.py


